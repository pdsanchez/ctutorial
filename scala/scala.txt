http://alvinalexander.com/scala/
http://joelabrahamsson.com/programming/scala/
http://www.tutorialspoint.com/scala/

https://ademirar.wordpress.com/2010/08/28/programacion-funcional-para-el-resto-de-nosotros/

https://github.com/ErunamoJAZZ/ScalaByExample-es

http://codigolinea.com/2015/03/27/introduccion-a-scala/
http://scala-exercises.47deg.com/

http://scalafiddle.net/console


Scala class

class Person(var name: String)
class Person(private var name: String)
class Person(val name: String)
class Person(name: String)

Declaration    Getter?    Setter?
-----------    -------    -------
var            yes        yes
val            yes        no
default        no         no


Auxiliary constructors
Define auxiliary constructors using this as the name for each auxiliary constructor. Make sure you call a previously defined constructor:

class Pizza {
 
  var crustSize = 12
  var crustType = "Thin"
   
  def this(crustSize: Int) {
    this()
    this.crustSize = crustSize
  }
 
  def this(crustSize: Int, crustType: String) {
    this(crustSize)
    this.crustType = crustType
  }
 
  override def toString = {
    "A %s inch pizza with %s crust.".format(crustSize, crustType)
  }
 
}




// TIMER

scala> def timer(total: Int, time: Int, callback: (Int) => Unit) {
     | var cont = 0
     | while (cont < total) { callback(cont); Thread.sleep(time); cont += 1 }
     | }

scala> timer(5, 500, (c) => println("prb" + c))


